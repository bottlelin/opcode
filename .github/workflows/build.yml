name: Build Windows 64-bit Binary

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    name: Build Windows x64
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
        
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Bun
      uses: oven-sh/setup-bun@v1
      
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('package.json', 'bun.lock') }}
        
    - name: Install dependencies
      run: bun install
      
    - name: Install Tauri CLI
      run: bun add --dev @tauri-apps/cli
      
    - name: Install WebView2
      run: |
        # WebView2 is typically pre-installed on Windows runners
        # but we'll ensure it's available
        Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile "MicrosoftEdgeWebview2Setup.exe"
        Start-Process -FilePath "MicrosoftEdgeWebview2Setup.exe" -ArgumentList "/silent /install" -Wait
        
    - name: Build frontend
      run: bun run build
      
    - name: Build Tauri app
      run: bun run tauri build
      env:
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-x64-binaries
        path: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/opcode.exe
        retention-days: 30
        
    - name: Upload release assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/opcode.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run Tests
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
        
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Bun
      uses: oven-sh/setup-bun@v1
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          src-tauri/target
          node_modules
          ~/.bun/install/cache
        key: ${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock', 'package.json', 'bun.lock') }}
        
    - name: Install dependencies
      run: bun install
      
    - name: Run TypeScript checks
      run: bunx tsc --noEmit
      
    - name: Run Rust tests
      run: cd src-tauri && cargo test
      
    - name: Run full check
      run: bun run check